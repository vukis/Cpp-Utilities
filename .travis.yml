dist: trusty
language: cpp
sudo: required

os:
    - linux

compiler:
    - gcc
    
cache:
  directories:
    - ${TRAVIS_BUILD_DIR}/deps/llvm-3.6.2
    - ${TRAVIS_BUILD_DIR}/deps/llvm-3.7.1
    - ${TRAVIS_BUILD_DIR}/deps/llvm-3.8.0
    - ${TRAVIS_BUILD_DIR}/deps/llvm-3.9.0
    - ${TRAVIS_BUILD_DIR}/deps/boost-1.59.0
    - ${TRAVIS_BUILD_DIR}/deps/boost-1.60.0
    - ${TRAVIS_BUILD_DIR}/deps/boost-1.61.0
    - ${TRAVIS_BUILD_DIR}/deps/boost-1.62.0
    - ${TRAVIS_BUILD_DIR}/deps/boost-1.63.0
    
#addons:
#  apt:
#    sources:
#      - boost-latest
#      - ubuntu-toolchain-r-test
#      - nschloe/boost-nightly
#    packages:
#      - libboost1.55-all-dev

env:
    - TARGET_CPU=x86 BUILD_CONFIGURATION=Debug
    - TARGET_CPU=x86 BUILD_CONFIGURATION=Release
 #   - TARGET_CPU=x64 BUILD_CONFIGURATION=Debug
 #   - TARGET_CPU=x64 BUILD_CONFIGURATION=Release
 #   - TARGET_CPU=amd64 BUILD_CONFIGURATION=Debug
 #   - TARGET_CPU=amd64 BUILD_CONFIGURATION=Release

before_install:
  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
  # http://ppa.launchpad.net/banshee-team/ppa/ubuntu/dists/
  #- sudo add-apt-repository -y ppa:nschloe/boost-nightly
  #- sudo apt-get update -qq
  #- sudo apt-get install libboost-all-dev
 # - sudo apt-get install libboost1.64-all-dev
 
#  - sudo apt-get install libboost-system1.64-dev
 # - sudo apt-get install libboost-filesystem1.64-dev
 # - sudo wget -O boost_1_64_0.tar.gz http://sourceforge.net/projects/boost/files/boost/1.64.0/boost_1_64_0.tar.gz/download
 # - sudo tar xzvf boost_1_64_0.tar.gz
 # - cd boost_1_64_0/
 # - sudo ./bootstrap.sh --prefix=/usr/local
 # - sudo ./b2
 # - sudo ./b2 install

install: 
  #- sudo apt-add-repository "deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-4.0 main"
  #- sudo apt-get install --allow-unauthenticated -qq clang++-4.0
  #- export CXX="clang++-4.0"
  
  - sudo apt-get install -qq g++-7
  - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 90
  - if [ "$CXX" = "g++" ]; then export CXX="g++-7"; fi
  
#  - sudo apt-get install libboost-all-dev
 # - sudo apt-get install libboost-system1.64-dev
#  - sudo apt-get install libboost-filesystem1.64-dev

 ############################################################################
  # Install Boost headers
  ############################################################################
  - |
    if [[ "${BOOST_VERSION}" != "" ]]; then
      BOOST_DIR=${DEPS_DIR}/boost-${BOOST_VERSION}
      if [[ -z "$(ls -A ${BOOST_DIR})" ]]; then
        if [[ "${BOOST_VERSION}" == "trunk" ]]; then
          BOOST_URL="http://github.com/boostorg/boost.git"
          travis_retry git clone --depth 1 --recursive ${BOOST_URL} ${BOOST_DIR} || exit 1
          (cd ${BOOST_DIR} && ./bootstrap.sh && ./b2 headers) || exit 1
        else
          BOOST_URL="http://sourceforge.net/projects/boost/files/boost/${BOOST_VERSION}/boost_${BOOST_VERSION//\./_}.tar.gz"
          mkdir -p ${BOOST_DIR}
          { travis_retry wget -O - ${BOOST_URL} | tar --strip-components=1 -xz -C ${BOOST_DIR}; } || exit 1
        fi
        # Make sure we don't conflict with the Hana shipped with Boost
        rm -rf ${BOOST_DIR}/include/boost/{hana,hana.hpp} || exit 1
      fi
      CMAKE_OPTIONS+=" -DBOOST_ROOT=${BOOST_DIR}"
    fi
  ############################################################################
  # Install a recent CMake
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.8/cmake-3.8.0-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      brew upgrade cmake || brew install cmake
    fi
  - cmake --version

  ############################################################################
  # Install Boost.Build
  ############################################################################
  - |
    if [[ "${BOOST_BUILD}" == "true" ]]; then
      (cd ${BOOST_DIR}/tools/build && ./bootstrap.sh && ./b2 install --prefix=${DEPS_DIR}/b2)
      export PATH=${DEPS_DIR}/b2/bin:${PATH}
    fi

  
script:
    - mkdir build
    - cd build
    - cmake .. -DTARGET_CPU=$TARGET_CPU -DCMAKE_BUILD_TYPE=$BUILD_CONFIGURATION
    - make
