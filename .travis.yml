dist: trusty
language: cpp
sudo: required

os:
  - linux
  #- osx

compiler:
  - gcc

env:
  - TARGET_CPU=x86 BUILD_CONFIGURATION=debug   ENABLE_COVERAGE=On  ANALYZE=On  CTEST_OUTPUT_ON_FAILURE=1 
  - TARGET_CPU=x86 BUILD_CONFIGURATION=release ENABLE_COVERAGE=Off ANALYZE=Off CTEST_OUTPUT_ON_FAILURE=1 
  - TARGET_CPU=x64 BUILD_CONFIGURATION=debug   ENABLE_COVERAGE=On  ANALYZE=On  CTEST_OUTPUT_ON_FAILURE=1 
  - TARGET_CPU=x64 BUILD_CONFIGURATION=release ENABLE_COVERAGE=Off ANALYZE=Off CTEST_OUTPUT_ON_FAILURE=1 
 # - TARGET_CPU=amd64 BUILD_CONFIGURATION=Debug
 # - TARGET_CPU=amd64 BUILD_CONFIGURATION=Release

# matrix:
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      # - boost-latest
    packages:
      - cmake
      - lcov
      - cppcheck
      # - libboost1.55-all-dev
 
before_install:

install:
  - bash CI/Travis/InstallCompilers.sh
  - bash CI/Travis/InstallDependencies.sh
  
script:
  - mkdir -p build
  - cd build
  - cmake .. -DTARGET_CPU=$TARGET_CPU -DCMAKE_BUILD_TYPE=$BUILD_CONFIGURATION -DENABLE_COVERAGE=$ENABLE_COVERAGE
  - make && make test
  
  if [ ${ANALYZE} = "On" ]; then
    - make check
  fi
  - make check
  if [ ${ENABLE_COVERAGE} = "On" ]; then
    - make gcov
    - make lcov
  fi

  #- cppcheck --help
  #- cppcheck --template "{file}({line}): {severity} ({id}): {message}"
  #- ./bin/ThreadPool-Test
 
after_success:  
  # Creating report
  - cd ${TRAVIS_BUILD_DIR}
  - lcov --directory . --capture --output-file coverage.info # capture coverage info
  - lcov --remove coverage.info '/usr/*' --output-file coverage.info # filter out system
  - lcov --list coverage.info #debug info
  # Uploading report to CodeCov
  - bash <(curl -s https://codecov.io/bash) -X gcov || echo "Codecov did not collect coverage reports"
  
notifications:
  email: false
